{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setTimeout","this","setInterval","date","setState","prevProps","name","props","console","log","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","names","newName","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"sNAWMA,E,4MACJC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,QAASC,YAAW,cAAU,I,uDAGhC,WAAqB,IAAD,OAClBC,KAAKN,MAAMI,QAAUG,aAAY,WAC/B,IAAMC,EAAa,IAAIN,KAEvB,EAAKO,SAAS,CAAER,KAAMO,EAAKL,yBAC1B,O,gCAGL,SAAmBO,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DL,KAAKM,MAAMD,S,kCAI9E,WACEI,cAAcT,KAAKN,MAAMI,W,oBAG3B,WACE,OACE,qCACE,sCAAOE,KAAKM,MAAMD,QAClB,4BAAKL,KAAKN,MAAMC,c,GA7BJe,IAAMC,WAmCXlB,ICnCTmB,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,I,4CAGb,WAAU,IAAD,OACP,EAAsCd,KAAKN,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAkBxB,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,SACGF,GAAkB,cAAC,EAAD,CAAOR,KAAMS,MAElC,sBAAKC,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,QAzBU,WAChB,EAAKd,SAAS,CAAEU,gBAAgB,KAsB5B,wBAOA,wBACEG,KAAK,SACLC,QA5BU,WAChB,EAAKd,SAAS,CAAEU,gBAAgB,KAyB5B,wBAMA,wBACEG,KAAK,SACLC,QA9BU,WAChB,IAAMC,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE1DC,EAAUD,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAEvD,EAAKpB,SAAS,CAAEW,UAAWK,KAuBvB,uC,GA7CQT,IAAMC,WAyDTC,ICjEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.96cbed65.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  time: string,\n  timerId: NodeJS.Timer;\n};\n\nclass Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    timerId: setTimeout(() => {}, 0),\n  };\n\n  componentDidMount() {\n    this.state.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        <p>{`${this.props.name}`}</p>\n        <p>{ this.state.time }</p>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: string;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: '',\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    const showClock = () => {\n      this.setState({ isClockVisible: true });\n    };\n\n    const hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    const nameClock = () => {\n      const names = ['tik', 'tak', 'tik', 'tak', 'tik', 'tak', 'tik', 'tak'];\n\n      const newName = names[Math.floor(Math.random() * names.length)];\n\n      this.setState({ clockName: newName });\n    };\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">React clock</h1>\n        <p className=\"app__name\">\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n        <div className=\"app__buttons\">\n          <button\n            type=\"button\"\n            onClick={showClock}\n          >\n            Show clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={hideClock}\n          >\n            Hide clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={nameClock}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}